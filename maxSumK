#include <iostream>
using namespace std;

int maxSumK(int arr[], int n, int k)
{
    if (k > n)
    {
        cout << "Invalid" << endl;
        return -1;
    }

    int max_sum = 0;
    for (int i = 0; i < k; ++i)
    {
        max_sum += arr[i];
    }

    int current_sum = max_sum;

    for (int i = k; i < n; ++i)
    {
        current_sum += arr[i] - arr[i - k];
        if (current_sum > max_sum)
        {
            max_sum = current_sum;
        }
    }

    return max_sum;
}

int main()
{
    int arr1[] = {100, 200, 300, 400};
    int k1 = 2;
    int n1 = sizeof(arr1) / sizeof(arr1[0]);

    int arr2[] = {1, 4, 2, 10, 23, 3, 1, 0, 20};
    int k2 = 4;
    int n2 = sizeof(arr2) / sizeof(arr2[0]);

    int arr3[] = {2, 3};
    int k3 = 3;
    int n3 = sizeof(arr3) / sizeof(arr3[0]);

    int result1 = maxSumK(arr1, n1, k1);
    if (result1 != -1)
    {
        cout << "Maximum sum of " << k1 << " consecutive elements: " << result1 << endl;
    }

    int result2 = maxSumK(arr2, n2, k2);
    if (result2 != -1)
    {
        cout << "Maximum sum of " << k2 << " consecutive elements: " << result2 << endl;
    }

    int result3 = maxSumK(arr3, n3, k3);
    if (result3 != -1)
    {
        cout << "Maximum sum of " << k3 << " consecutive elements: " << result3 << endl;
    }

    return 0;
}
