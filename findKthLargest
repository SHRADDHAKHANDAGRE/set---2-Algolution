#include <iostream>
using namespace std;


void swap(int& a, int& b)
{
    int temp = a;
    a = b;
    b = temp;
}

int partition(int arr[], int left, int right) {
    int pivot = arr[right];  
    int i = left;  
    
    for (int j = left; j < right; j++) {
        if (arr[j] >= pivot) { 
            swap(arr[i], arr[j]);
            i++;  
        }
    }
    swap(arr[i], arr[right]); 
    return i; 
}


int select(int arr[], int left, int right, int k) 
{
    if (left <= right)
    {
        int pivotIndex = partition(arr, left, right);
        
        if (pivotIndex == k - 1)
        {
            return arr[pivotIndex];
        }
        else if (pivotIndex > k - 1) {
            return select(arr, left, pivotIndex - 1, k);
        }
        else {
            return select(arr, pivotIndex + 1, right, k);
        }
    }
    return -1; 
}

int findKthLargest(int arr[], int n, int k) 
{
    return select(arr, 0, n - 1, k);
}

int main()
{
    int nums[] = {3, 2, 1, 5, 6, 4};
    int n = sizeof(nums) / sizeof(nums[0]);
    int k = 2;
    
    int result = findKthLargest(nums, n, k);
    cout << "The " << k << "th largest element is: " << result << endl;  
    
    return 0;
}
